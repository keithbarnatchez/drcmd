#'
#'
#'
print.drcmd <- function(x, ...) {
cat("Doubly-Robust Causal Inference Results\n")
cat("-------------------------------------------------\n")
cat("ATE estimate: ",x$estimates$psi_hat_ate,'\n')
cat("-------------------------------------------------\n")
cat("Variables with missingness (U): ", x$U ,"\n")
cat("-------------------------------------------------\n")
cat("Variables without missingness (Z): ", x$Z ,"\n")
cat("-------------------------------------------------\n")
cat('Validity of results requires causal assumptions to hold\n')
cat('As well as the assumption that U is indepenent of R given Z\n')
cat("Number of cross-fitting folds (k):", x$k, "\n")
cat("Bootstrap samples (nboot):", x$nboot, "\n")
cat("\nEstimates:\n")
}
drcmd_res
#'
#'
#'
#'
#'
#'
#'
#'
#'
print.drcmd <- function(x, ...) {
cat("drcmd results\n")
cat("-------------------------------------------------\n")
cat("ATE estimate: ",x$estimates$psi_hat_ate,'\n')
cat("-------------------------------------------------\n")
cat("Variables with missingness (U): ", x$U ,"\n")
cat("-------------------------------------------------\n")
cat("Variables without missingness (Z): ", x$Z ,"\n")
cat("-------------------------------------------------\n")
cat('Validity of results requires causal assumptions to hold\n')
cat('As well as the assumption that U is indepenent of R given Z\n')
cat("Number of cross-fitting folds (k):", x$k, "\n")
cat("Bootstrap samples (nboot):", x$nboot, "\n")
cat("\nEstimates:\n")
}
drcmd_res
Y
source('../R/utils.R')
source('../R/drcmd.R')
source('../R/nuis.R')
source('../R/methods.R')
drcmd_res <- drcmd(Y,A,X, hal_ind=FALSE,sl.lib=sl.lib)
# Combine variables into a single data frame
data <- cbind(X,W,data.frame(Y=Y,A=A))
# find variables that are never missing
never_missing <- colnames(data)[apply(data,2,function(x) sum(is.na(x))==0)]
# find variables that are sometimes missing
sometimes_missing <- colnames(data)[apply(data,2,function(x) sum(is.na(x))>0)]
# make variable that indicates complete cases and df of all complete data
R <- as.numeric(apply(data,1,function(x) sum(is.na(x))==0))
Z <- data[,colnames(data)[apply(data,2,function(x) sum(is.na(x))==0)]]
# If any values of Y, X or Z equal NA, set them to 0
X[is.na(X)] <- 0
Y[is.na(Y)] <- 0
A[is.na(A)] <- 0
sometimes_missing
source('../R/utils.R')
source('../R/utils.R')
source('../R/drcmd.R')
source('../R/nuis.R')
source('../R/methods.R')
drcmd_res <- drcmd(Y,A,X, hal_ind=FALSE,sl.lib=sl.lib)
# Combine variables into a single data frame
data <- cbind(X,W,data.frame(Y=Y,A=A))
# find variables that are never missing
never_missing <- colnames(data)[apply(data,2,function(x) sum(is.na(x))==0)]
# find variables that are sometimes missing
sometimes_missing <- colnames(data)[apply(data,2,function(x) sum(is.na(x))>0)]
# make variable that indicates complete cases and df of all complete data
R <- as.numeric(apply(data,1,function(x) sum(is.na(x))==0))
Z <- data[,colnames(data)[apply(data,2,function(x) sum(is.na(x))==0)]]
source('../R/utils.R')
source('../R/drcmd.R')
source('../R/nuis.R')
source('../R/methods.R')
#-------------------------------------------------------------------------------
# Make a couple functions for simming simple data structure
n <- 1e3
X <- rnorm(n) ; A <- rbinom(n,1,plogis(X)) ; Y <- rnorm(n) + A + X
Ystar <- Y + rnorm(n)/2 ; R <- rbinom(n,1,plogis(X)) ; X <- as.data.frame(X)
# Make Y NA is R==0
Y[R==0] <- NA
df <- data.frame(Y=Y,A=A,X=X,Ystar=Ystar,R=R)
# X = data.frame(cbind(X,X))
W = X[,0]
drcmd_res <- drcmd(Y,A,X, hal_ind=FALSE,sl.lib=sl.lib)
drcmd_res
res
# Estimate
res <- list()
res$estimates <- drcmd_est(Y,A,X,Z,R,hal_ind,sl.lib,eem_ind,Rprobs,k)
res$Z <- colnames(Z)
res$U <- V$sometimes_missing
res
v
V
V$U
drcmd_res <- drcmd(Y,A,X, hal_ind=FALSE,sl.lib=sl.lib)
drcmd_res
source('../R/utils.R')
source('../R/drcmd.R')
source('../R/nuis.R')
source('../R/methods.R')
drcmd_res <- drcmd(Y,A,X, hal_ind=FALSE,sl.lib=sl.lib)
drcmd_res
summary(drcmd_Res)
summary(drcmd_res)
#' @return A summary of the results
#'  \describe{
#'    \item{Estimates}{A data frame containing the estimates}
#'  }
#'
#'
#'
#'
#'
#'
summary.drcmd <- function(results, ...) {
cat("=================================================\n")
cat("            Summary of drcmd results             \n")
cat("=================================================\n")
cat("ATE estimate: ",results$estimates$psi_hat_ate,'\n')
cat("-------------------------------------------------\n")
cat("Variables with missingness (U): ", results$U ,"\n")
cat("-------------------------------------------------\n")
cat("Variables without missingness (Z): ", results$Z ,"\n")
cat("-------------------------------------------------\n")
cat('Validity of results requires causal assumptions to hold\n')
cat('As well as the assumption that U is independent of R given Z')
}
summary(drcmd_res)
#' @return A summary of the results
#'  \describe{
#'    \item{Estimates}{A data frame containing the estimates}
#'  }
#'
#'
#'
#'
#'
#'
summary.drcmd <- function(results, ...) {
cat("=================================================\n")
cat("            Summary of drcmd results             \n")
cat("=================================================\n")
cat("ATE estimate: ",results$estimates$psi_hat_ate,'\n')
cat("-------------------------------------------------\n")
cat("Variables with missingness (U): ", results$U ,"\n")
cat("-------------------------------------------------\n")
cat("Variables without missingness (Z): ", results$Z ,"\n")
cat("-------------------------------------------------\n")
cat('Validity of results requires causal assumptions to\nhold')
cat('As well as the assumption that U is independent of R given Z')
}
summary(drcmd_res)
#' @return A summary of the results
#'  \describe{
#'    \item{Estimates}{A data frame containing the estimates}
#'  }
#'
#'
#'
#'
#'
#'
summary.drcmd <- function(results, ...) {
cat("=================================================\n")
cat("            Summary of drcmd results             \n")
cat("=================================================\n")
cat("ATE estimate: ",results$estimates$psi_hat_ate,'\n')
cat("-------------------------------------------------\n")
cat("Variables with missingness (U): ", results$U ,"\n")
cat("-------------------------------------------------\n")
cat("Variables without missingness (Z): ", results$Z ,"\n")
cat("-------------------------------------------------\n")
cat('Validity of results requires causal assumptions to\nhold')
cat(', as well as the assumption that U is independent of\nR given Z')
}
summary(drcmd_res)
#' @return A summary of the results
#'  \describe{
#'    \item{Estimates}{A data frame containing the estimates}
#'  }
#'
#'
#'
#'
#'
#'
summary.drcmd <- function(results, ...) {
cat("=================================================\n")
cat("            Summary of drcmd results             \n")
cat("=================================================\n")
cat("ATE estimate: ",results$estimates$psi_hat_ate,'\n')
cat("-------------------------------------------------\n")
cat("Variables with missingness (U): ", results$U ,"\n")
cat("-------------------------------------------------\n")
cat("Variables without missingness (Z): ", results$Z ,"\n")
cat("-------------------------------------------------\n")
cat('Validity of results requires causal assumptions to hold\n')
cat(', as well as the assumption that U is independent of\nRgiven Z')
}
summary(drcmd_res)
#' @return A summary of the results
#'  \describe{
#'    \item{Estimates}{A data frame containing the estimates}
#'  }
#'
#'
#'
#'
#'
#'
summary.drcmd <- function(results, ...) {
cat("=================================================\n")
cat("            Summary of drcmd results             \n")
cat("=================================================\n")
cat("ATE estimate: ",results$estimates$psi_hat_ate,'\n')
cat("-------------------------------------------------\n")
cat("Variables with missingness (U): ", results$U ,"\n")
cat("-------------------------------------------------\n")
cat("Variables without missingness (Z): ", results$Z ,"\n")
cat("-------------------------------------------------\n")
cat('Validity of results requires causal assumptions to hold,\n')
cat('as well as the assumption that U is independent of\nRgiven Z')
}
summary(drcmd_res)
#' @return A summary of the results
#'  \describe{
#'    \item{Estimates}{A data frame containing the estimates}
#'  }
#'
#'
#'
#'
#'
#'
summary.drcmd <- function(results, ...) {
cat("=================================================\n")
cat("            Summary of drcmd results             \n")
cat("=================================================\n")
cat("ATE estimate: ",results$estimates$psi_hat_ate,'\n')
cat("-------------------------------------------------\n")
cat("Variables with missingness (U): ", results$U ,"\n")
cat("-------------------------------------------------\n")
cat("Variables without missingness (Z): ", results$Z ,"\n")
cat("-------------------------------------------------\n")
cat('Validity of results requires causal assumptions to hold,\n')
cat('as well as the assumption that U is independent of\nR given Z')
}
summary(drcmd_res)
setwd("~/Documents/research/me-dep-sampling/R")
path <- '../output/sim_results-2025-01-20-08-07-44.csv'   #  '../output/sim_results-2024-09-05-07-34-53.csv'
res <- read.csv(path)
winsorize <- function(x,pctile=0.001) {
q <- quantile(x,probs=c(pctile,1-pctile))
x[x<q[1]] <- q[1]
x[x>q[2]] <- q[2]
return(x)
}
# Rename the plugin and onestep variables in res to pluginest and onestepest
res <- res %>% rename(pluginest = plugin, onestepest = onestep,
oracleest = oracle, naiveest = naive,
tmlest=tml,cvest=psi_hat_cv,tmlevmest=tml_evm,
tmlmidest=tml_mid,
tmlse=tmlse,
onestepse=onestepse,
tmlmidse=tml_midse,
tmlevmse=tml_evmse) %>%
mutate(onestepest=winsorize(onestepest),
pluginest=winsorize(pluginest))
# Reshape to long format on the est vars
res_long <- res %>%
pivot_longer(cols = ends_with('est'),
names_to = 'method',
values_to = 'tau_est') %>%
mutate(method=case_when(method == 'onestepest' ~ 'Approach 1 One-step',
method == 'pluginest' ~ 'Approach 1 Plug-in',
method == 'oracleest' ~ 'Oracle',
method == 'naiveest' ~ 'Naive',
method == 'onestep_adaptest' ~ 'Adaptive one-step',
method == 'plugin_adaptest' ~ 'Adaptive plug-in',
method == 'tmlest' ~ 'TML',
method == 'tmlevmest' ~ 'Approach 2 One-step (EEM)',
method == 'cvest' ~ 'TML-CV',
method == 'tmlmidest' ~ 'Approach 2 One-step'))
res_ci<- res %>%
mutate(tmlcov = ((tmlest -  qnorm(0.975)*tmlse)  <= 2.5 ) & ((tmlest +  qnorm(0.975)*tmlse)  >= 2.5 )
)
# First, for tmt effect estimates
### CHANGE BACK TO MEAN
grp_vec <- c('method','omega','n','rho')
res_summ <- res_long %>% group_by(across(all_of(grp_vec))) %>%
summarize(per_bias = mean(100*(tau_est-2.5),na.rm=T),
rmse = sqrt(mean( (tau_est-2.5)^2 , na.rm=T) ) ) %>%
mutate(rho_desc = paste('rho =',rho))
ofyesplot <- res_long %>% filter(n %in% c(1000, 2500, 5000)) %>%
filter(!(method %in% c('Adaptive one-step','Adaptive plug-in'))) %>%
mutate(rho_desc = paste('P(R=1) =',rho)) %>%
mutate(n_desc = paste('n =',n)) %>%
filter(omega==0.2) %>%  ggplot(aes(x=tau_est,y=as.factor(method),
fill=as.factor(method))) +
xlim(c(-3,8)) +
geom_density_ridges(alpha = 0.5,
scale = 1,
rel_min_height = 0.02,
quantile_lines = T,
quantiles = 0.5,
panel_scaling = F) +
facet_grid(fct_reorder(n_desc,n) ~ as.factor(rho_desc),scales='free') + theme_bw() +
theme(legend.position = 'bottom',
axis.text.y = element_blank(),  # Hide y-axis labels
axis.ticks.y = element_blank(),
plot.subtitle = element_markdown(),
plot.title = element_markdown()) +
geom_vline(xintercept = 2.5, color='black',linetype='dashed') +
labs(title='**Performance of one-step estimators**',
subtitle = 'Varying (1) overall sample size (2) relative size of validation data<br>Distribution of treatment effect estimates across 2500 iterations',
y='Method',
x='ATE estimate',
fill='Method') +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) ; ofyesplot
ggsave('../figures/onestep-plugin-grid.pdf',ofyesplot,
width=8,height=6,units = 'in')
ofyesplot <- res_long %>% filter(n %in% c(1000, 2500, 5000)) %>%
filter(!(method %in% c('Adaptive one-step','Adaptive plug-in',
'TML','TML-CV'))) %>%
mutate(rho_desc = paste('P(R=1) =',rho)) %>%
mutate(n_desc = paste('n =',n)) %>%
filter(omega==0.2) %>%  ggplot(aes(x=tau_est,y=as.factor(method),
fill=as.factor(method))) +
xlim(c(-3,8)) +
geom_density_ridges(alpha = 0.5,
scale = 1,
rel_min_height = 0.02,
quantile_lines = T,
quantiles = 0.5,
panel_scaling = F) +
facet_grid(fct_reorder(n_desc,n) ~ as.factor(rho_desc),scales='free') + theme_bw() +
theme(legend.position = 'bottom',
axis.text.y = element_blank(),  # Hide y-axis labels
axis.ticks.y = element_blank(),
plot.subtitle = element_markdown(),
plot.title = element_markdown()) +
geom_vline(xintercept = 2.5, color='black',linetype='dashed') +
labs(title='**Performance of one-step estimators**',
subtitle = 'Varying (1) overall sample size (2) relative size of validation data<br>Distribution of treatment effect estimates across 2500 iterations',
y='Method',
x='ATE estimate',
fill='Method') +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) ; ofyesplot
ggsave('../figures/onestep-plugin-grid.pdf',ofyesplot,
width=8,height=6,units = 'in')
# Using res_summ, plot rmse as a function of rho, with facetsf for sample size
# Omit the naive method to prevent scale from being distorted
rmseplot <- res_summ %>% filter(n %in% c(1000, 2500, 5000)) %>%
filter(!(method %in% c('Adaptive one-step','Adaptive plug-in','Naive',
'TML','TML-CV'))) %>%
mutate(n_desc = paste('n =',n)) %>%
ggplot(aes(x=rho,y=rmse,group=method,color=method)) +
geom_line(size=0.7) + geom_point() +
facet_wrap(~n_desc) +
labs(title='**RMSE of treatment effect estimates**',
subtitle = 'Varying (1) overall sample size (2) relative size of validation data',
x='P(R=1)',
y='RMSE',
color='Method') +
theme_bw() +
theme(legend.position = 'bottom',
plot.subtitle = element_markdown(),
plot.title = element_markdown()) ; rmseplot
# Using res_summ, plot rmse as a function of rho, with facetsf for sample size
# Omit the naive method to prevent scale from being distorted
rmseplot <- res_summ %>% filter(n %in% c(1000, 2500, 5000)) %>%
filter(!(method %in% c('Adaptive one-step','Adaptive plug-in','Naive',
'TML','TML-CV', 'Approach 2 One-step'))) %>%
mutate(n_desc = paste('n =',n)) %>%
ggplot(aes(x=rho,y=rmse,group=method,color=method)) +
geom_line(size=0.7) + geom_point() +
facet_wrap(~n_desc) +
labs(title='**RMSE of treatment effect estimates**',
subtitle = 'Varying (1) overall sample size (2) relative size of validation data',
x='P(R=1)',
y='RMSE',
color='Method') +
theme_bw() +
theme(legend.position = 'bottom',
plot.subtitle = element_markdown(),
plot.title = element_markdown()) ; rmseplot
ggsave('../figures/rmse-plot-n-grid-with-a2.pdf',width=8,height=4,units = 'in')
# Plot RMSEs with naive + oracle methods included
rmseplot <- res_summ %>% filter(n %in% c(1000, 2500, 5000)) %>%
filter(!(method %in% c('Adaptive one-step','Adaptive plug-in','Naive',
'TML','TML-CV'))) %>%
ggplot(aes(x=rho,y=rmse,group=method,color=method)) +
geom_line(size = 0.8, linetype = "solid") +  # Slightly thicker, solid lines
geom_point(size = 2.5, shape = 21, fill = "white", stroke = 1.2) +
facet_wrap(~paste0('n=',n)) +
labs(title='**RMSE of treatment effect estimates**',
subtitle = 'Varying (1) overall sample size (2) relative size of validation data',
x='P(R=1)',
y='RMSE',
color='Method') +
theme_bw() +
theme(legend.position = 'bottom',
plot.subtitle = element_markdown(),
plot.title = element_markdown(),
panel.grid.major = element_line(size = 0.40),  # Lighter gridlines
panel.grid.minor = element_line(size=0),  # Remove minor gridlines for a cleaner look
strip.background = element_blank(),  # Remove facet background for a sleeker look
strip.text = element_text(size = 13, face = "bold"),  # Bold facet titles for emphasis
)  ; rmseplot
ggsave('../figures/rmse-plot-n-grid-with-a2.pdf',width=8,height=4,units = 'in')
# Plot RMSEs with naive + oracle methods included
rmseplot <- res_summ %>% filter(n %in% c(1000, 2500, 5000)) %>%
filter(!(method %in% c('Adaptive one-step','Adaptive plug-in',
'TML','TML-CV','Approach 2 One-step'))) %>%
ggplot(aes(x=rho,y=rmse,group=method,color=method)) +
geom_line(size = 0.8, linetype = "solid") +  # Slightly thicker, solid lines
geom_point(size = 2.5, shape = 21, fill = "white", stroke = 1.2) +
facet_wrap(~paste0('n=',n)) +
labs(title='**RMSE of treatment effect estimates**',
subtitle = 'Varying (1) overall sample size (2) relative size of validation data',
x='P(R=1)',
y='RMSE',
color='Method') +
theme_bw() +
theme(legend.position = 'bottom',
plot.subtitle = element_markdown(),
plot.title = element_markdown(),
panel.grid.major = element_line(size = 0.40),  # Lighter gridlines
panel.grid.minor = element_line(size=0),  # Remove minor gridlines for a cleaner look
strip.background = element_blank(),  # Remove facet background for a sleeker look
strip.text = element_text(size = 13, face = "bold"),  # Bold facet titles for emphasis
)  ; rmseplot
ggsave('../figures/rmse-plot-n-grid-without-a2.pdf',width=8,height=4,units = 'in')
# Plot RMSEs with naive + oracle methods included
rmseplot <- res_summ %>% filter(n %in% c(1000, 2500, 5000)) %>%
filter(!(method %in% c('Adaptive one-step','Adaptive plug-in',
'TML','TML-CV'))) %>%
ggplot(aes(x=rho,y=rmse,group=method,color=method)) +
geom_line(size = 0.8, linetype = "solid") +  # Slightly thicker, solid lines
geom_point(size = 2.5, shape = 21, fill = "white", stroke = 1.2) +
facet_wrap(~paste0('n=',n)) +
labs(title='**RMSE of treatment effect estimates**',
subtitle = 'Varying (1) overall sample size (2) relative size of validation data',
x='P(R=1)',
y='RMSE',
color='Method') +
theme_bw() +
theme(legend.position = 'bottom',
plot.subtitle = element_markdown(),
plot.title = element_markdown(),
panel.grid.major = element_line(size = 0.40),  # Lighter gridlines
panel.grid.minor = element_line(size=0),  # Remove minor gridlines for a cleaner look
strip.background = element_blank(),  # Remove facet background for a sleeker look
strip.text = element_text(size = 13, face = "bold"),  # Bold facet titles for emphasis
)  ; rmseplot
ggsave('../figures/rmse-plot-n-grid-with-a2.pdf',width=8,height=4,units = 'in')
# Plot RMSEs with naive + oracle methods included
rmseplot <- res_summ %>% filter(n %in% c(1000, 2500, 5000)) %>%
filter(!(method %in% c('Adaptive one-step','Adaptive plug-in',
'TML','TML-CV','Approach 2 One-step'))) %>%
ggplot(aes(x=rho,y=rmse,group=method,color=method)) +
geom_line(size = 0.8, linetype = "solid") +  # Slightly thicker, solid lines
geom_point(size = 2.5, shape = 21, fill = "white", stroke = 1.2) +
facet_wrap(~paste0('n=',n)) +
labs(title='**RMSE of treatment effect estimates**',
subtitle = 'Varying (1) overall sample size (2) relative size of validation data',
x='P(R=1)',
y='RMSE',
color='Method') +
theme_bw() +
theme(legend.position = 'bottom',
plot.subtitle = element_markdown(),
plot.title = element_markdown(),
panel.grid.major = element_line(size = 0.40),  # Lighter gridlines
panel.grid.minor = element_line(size=0),  # Remove minor gridlines for a cleaner look
strip.background = element_blank(),  # Remove facet background for a sleeker look
strip.text = element_text(size = 13, face = "bold"),  # Bold facet titles for emphasis
)  ; rmseplot
ggsave('../figures/rmse-plot-n-grid-without-a2.pdf',width=8,height=4,units = 'in')
# Plot RMSEs with naive + oracle methods included
rmseplot <- res_summ %>% filter(n %in% c(1000, 2500, 5000)) %>%
filter(!(method %in% c('Adaptive one-step','Adaptive plug-in',
'TML','TML-CV'))) %>%
ggplot(aes(x=rho,y=rmse,group=method,color=method)) +
geom_line(size = 0.8, linetype = "solid") +  # Slightly thicker, solid lines
geom_point(size = 2.5, shape = 21, fill = "white", stroke = 1.2) +
facet_wrap(~paste0('n=',n)) +
labs(title='**RMSE of treatment effect estimates**',
subtitle = 'Varying (1) overall sample size (2) relative size of validation data',
x='P(R=1)',
y='RMSE',
color='Method') +
theme_bw() +
theme(legend.position = 'bottom',
plot.subtitle = element_markdown(),
plot.title = element_markdown(),
panel.grid.major = element_line(size = 0.40),  # Lighter gridlines
panel.grid.minor = element_line(size=0),  # Remove minor gridlines for a cleaner look
strip.background = element_blank(),  # Remove facet background for a sleeker look
strip.text = element_text(size = 13, face = "bold"),  # Bold facet titles for emphasis
)  ; rmseplot
